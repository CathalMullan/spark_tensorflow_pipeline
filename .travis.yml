os: linux
dist: bionic

language: python
cache: pip
python:
  - 3.6

stages:
  - test
  - lint
  - deploy

services:
  - docker

before_install:
  - openssl aes-256-cbc -K $encrypted_0b2a1fcc9951_key -iv $encrypted_0b2a1fcc9951_iv -in .travis/travis-ci_service_account.json.enc -out travis-ci_service_account.json -d

jobs:
  include:
    - stage: lint
      install:
        - pip install pre-commit
        - pre-commit install-hooks
      script:
        - make lint

    - stage: test
      install:
        # TensorFlow & Horovod
        # 10.0-base-ubuntu18.04
        # https://gitlab.com/nvidia/container-images/cuda/blob/ubuntu18.04/10.0/base/Dockerfile
        - sudo apt-get update
        - sudo apt-get install -y gnupg2 curl ca-certificates
        - curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | sudo apt-key add -
        - echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" | sudo tee -a /etc/apt/sources.list.d/cuda.list
        - echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" | sudo tee -a /etc/apt/sources.list.d/nvidia-ml.list

        - export CUDA_VERSION=10.0.130
        - export CUDA_PKG_VERSION=10-0=$CUDA_VERSION-1

        # For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
        - sudo apt-get update
        - sudo apt-get install -y cuda-cudart-$CUDA_PKG_VERSION cuda-compat-10-0
        - sudo ln -s cuda-10.0 /usr/local/cuda

        # Required for nvidia-docker v1
        - echo "/usr/local/nvidia/lib" | sudo tee -a /etc/ld.so.conf.d/nvidia.conf
        - echo "/usr/local/nvidia/lib64" | sudo tee -a /etc/ld.so.conf.d/nvidia.conf

        - export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        - export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64

        # nvidia-container-runtime
        - export NVIDIA_VISIBLE_DEVICES=all
        - export NVIDIA_DRIVER_CAPABILITIES=compute,utility
        - export NVIDIA_REQUIRE_CUDA="cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411"

        # 10.0-runtime-ubuntu18.04
        # https://gitlab.com/nvidia/container-images/cuda/blob/ubuntu18.04/10.0/runtime/Dockerfile
        - export NCCL_VERSION=2.4.2

        - sudo apt-get update
        - sudo apt-get install -y cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=${NCCL_VERSION}-1+cuda10.0
        - sudo apt-mark hold libnccl2

        # 10.0-devel-ubuntu18.04
        # https://gitlab.com/nvidia/container-images/cuda/blob/ubuntu18.04/10.0/devel/Dockerfile
        - sudo apt-get update
        - sudo apt-get install -y cuda-libraries-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-minimal-build-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION libnccl-dev=$NCCL_VERSION-1+cuda10.0

        - export LIBRARY_PATH=/usr/local/cuda/lib64/stubs

        # Open MPI
        # https://github.com/horovod/horovod/blob/master/Dockerfile.gpu
        - export TENSORFLOW_VERSION=2.1.0
        - export CUDNN_VERSION=7.6.0.64-1+cuda10.0
        - export NCCL_VERSION=2.4.7-1+cuda10.0

        - sudo apt-get update
        - sudo apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends build-essential cmake git curl vim wget ca-certificates libcudnn7=${CUDNN_VERSION} libnccl2=${NCCL_VERSION} libnccl-dev=${NCCL_VERSION} libjpeg-dev libpng-dev librdmacm1 libibverbs1 ibverbs-providers

        # Install TensorFlow and HDF5
        - pip install tensorflow-gpu==${TENSORFLOW_VERSION} h5py

        # Install Open MPI
        - mkdir /tmp/openmpi
        - (cd /tmp/openmpi && sudo wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && sudo tar zxf openmpi-4.0.0.tar.gz && cd openmpi-4.0.0 && sudo ./configure --enable-orterun-prefix-by-default && sudo make -j $(nproc) all && sudo make install)
        - sudo ldconfig

        # Install Horovod, temporarily using CUDA stubs
        - sudo ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs
        - HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL HOROVOD_WITH_TENSORFLOW=1 pip install horovod
        - sudo ldconfig

        - pip install poetry
        - poetry install -v
      script:
        - make test

    - stage: deploy
      script:
        - cat travis-ci_service_account.json | docker login -u _json_key https://gcr.io --password-stdin
        - make docker_publish
